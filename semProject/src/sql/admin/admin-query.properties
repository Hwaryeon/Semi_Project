selectAllMember=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM(SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM(SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY user_id DESC)) WHERE RNUM BETWEEN ? AND ?
listCount=SELECT COUNT(*) FROM MEMBER
searchAllMember=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM(SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM(SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER WHERE USER_ID LIKE '%'||?||'%' OR USER_CLASS LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%' OR NICK_NAME LIKE '%'||?||'%' OR EMAIL LIKE '%'||?||'%' OR PHONE LIKE '%'||?||'%')) WHERE RNUM BETWEEN ? AND ?
sortUser_id=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY USER_ID)) WHERE RNUM BETWEEN ? AND ?
sortUser_class=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY USER_CLASS)) WHERE RNUM BETWEEN ? AND ?
sortUser_name=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY USER_NAME)) WHERE RNUM BETWEEN ? AND ?
sortNick_name=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY NICK_NAME)) WHERE RNUM BETWEEN ? AND ?
sortEmail=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY EMAIL)) WHERE RNUM BETWEEN ? AND ?
sortPhone=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM (SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE FROM MEMBER ORDER BY PHONE)) WHERE RNUM BETWEEN ? AND ?
selectOneMember=SELECT USER_ID, USER_CLASS, USER_NAME, NICK_NAME, EMAIL, PHONE, ENROLL_DATE FROM MEMBER WHERE USER_ID=?
blackSelectAll=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, CORPORATE_NAME, REASON, ENROLL_DATE FROM(SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, NICK_NAME, CORPORATE_NAME, REASON, ENROLL_DATE FROM(   SELECT B.USER_ID, USER_CLASS, USER_NAME, NICK_NAME, CORPORATE_NAME, B.REASON, B.ENROLL_DATE FROM MEMBER M JOIN BLACKLIST B ON (M.USER_ID = B.USER_ID) WHERE B.STATUS='Y')) WHERE RNUM BETWEEN ? AND ?
blackListCount=SELECT COUNT(M.USER_ID) FROM MEMBER M JOIN BLACKLIST B ON (M.USER_ID = B.USER_ID) WHERE B.STATUS = 'Y'
searchMemberListCount=SELECT count(*) FROM MEMBER WHERE USER_ID LIKE '%'||?||'%' OR USER_CLASS LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%' OR NICK_NAME LIKE '%'||?||'%' OR EMAIL LIKE '%'||?||'%' OR PHONE LIKE '%'||?||'%'
blackMemberSearch=SELECT RNUM, USER_ID, USER_CLASS, USER_NAME, CORPORATE_NAME, REASON, ENROLL_DATE FROM(SELECT ROWNUM RNUM, USER_ID, USER_CLASS, USER_NAME, CORPORATE_NAME, REASON, ENROLL_DATE FROM(SELECT USER_ID, USER_CLASS, USER_NAME, CORPORATE_NAME, REASON, ENROLL_DATE FROM(SELECT M.USER_ID, USER_CLASS, USER_NAME, CORPORATE_NAME, B.REASON, B.ENROLL_DATE FROM MEMBER M JOIN BLACKLIST B ON (M.USER_ID = B.USER_ID) WHERE B.STATUS='Y') WHERE USER_ID LIKE '%'||?||'%' OR USER_CLASS LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%' OR CORPORATE_NAME LIKE '%'||?||'%' OR REASON LIKE '%'||?||'%' OR ENROLL_DATE LIKE '%'||?||'%')) WHERE RNUM BETWEEN ? AND ?
blacklistSearchCount=SELECT COUNT(*) FROM(SELECT M.USER_ID, USER_CLASS, USER_NAME, CORPORATE_NAME, B.REASON, B.ENROLL_DATE FROM MEMBER M JOIN BLACKLIST B ON (M.USER_ID = B.USER_ID) WHERE B.STATUS='Y') WHERE USER_ID LIKE '%'||?||'%' OR USER_CLASS LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%' OR CORPORATE_NAME LIKE '%'||?||'%' OR REASON LIKE '%'||?||'%' OR ENROLL_DATE LIKE '%'||?||'%'
updateBlackList=INSERT INTO BLACKLIST (B_RECORD_ID, USER_ID, REASON, STATUS, ENROLL_DATE, RELEASE_DATE) VALUES (SEQ_B_RECORD_ID.NEXTVAL,?, ?, 'Y', SYSDATE, NULL)
selectAllInvRank=SELECT RNUM, USER_ID, USER_NAME, INVESTOR_GRADE FROM(SELECT ROWNUM RNUM, USER_ID, USER_NAME, INVESTOR_GRADE FROM(SELECT USER_ID, USER_NAME, INVESTOR_GRADE FROM MEMBER WHERE GRADING_STATUS = ?)) WHERE RNUM BETWEEN ? AND ?
invRankCount=SELECT COUNT(*) FROM MEMBER WHERE GRADING_STATUS = ?
updateRank=UPDATE MEMBER SET  INVESTOR_GRADE = 'QI', GRADING_STATUS=?  WHERE USER_ID=?
projectAllListCount=SELECT count(*) FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval'
projectSelectAll=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = ?)) WHERE RNUM BETWEEN ? AND ?
sortProjectP_name=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') ORDER BY p_name) WHERE RNUM BETWEEN ? AND ?
sortProjectUser_name=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') ORDER BY user_name) WHERE RNUM BETWEEN ? AND ?
sortProjectTest=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') ORDER BY test) WHERE RNUM BETWEEN ? AND ?
sortProjectResult=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') ORDER BY result) WHERE RNUM BETWEEN ? AND ?
searchProject=SELECT RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, RESULT , status FROM(SELECT ROWNUM RNUM, P_NAME, USER_NAME, test, CLOSING_AMOUNT, INTEREST_RATE , P_NAME_1, P_ID, TRUNC((RESULT/CLOSING_AMOUNT*100)+0.09,1) AS RESULT, status FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') WHERE P_NAME LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%') WHERE RNUM BETWEEN ? AND ?
searchProjectCount=SELECT COUNT(*) FROM(SELECT P.P_NAME, M.USER_NAME, (PR.START_DATE + P.OPEN_DATE) as test, P.CLOSING_AMOUNT, P.INTEREST_RATE , PT.P_NAME AS P_NAME_1, sp.P_ID, sp.result, PR.STATUS FROM (SELECT P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON (I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) GROUP BY P.P_ID) sp RIGHT JOIN PRODUCT p on (p.p_id = sp.p_id) JOIN MEMBER M ON (P.USER_ID = M.USER_ID) JOIN P_TYPE PT ON (P.P_CODE = PT.P_CODE) JOIN PRODUCT_RECORD PR ON (P.P_ID = PR.P_ID) WHERE PR.STATUS = 'enrollApproval') WHERE P_NAME LIKE '%'||?||'%' OR USER_NAME LIKE '%'||?||'%'
selectOneEnp=select distinct(user_id), USER_CLASS, USER_NAME, CORPORATE_NAME, NICK_NAME, EMAIL, PHONE, ENROLL_DATE, product_count, finalresult from (SELECT M.USER_ID, M.USER_CLASS, M.USER_NAME, M.CORPORATE_NAME, M.NICK_NAME, M.EMAIL, M.PHONE, M.ENROLL_DATE ,(SELECT COUNT(*) FROM PRODUCT WHERE USER_ID=?) AS PRODUCT_COUNT ,(SELECT SUM(RESULT) AS RESULT2 FROM( SELECT IR.INVEST_ID, P.P_ID, SUM(IR.PRICE) AS RESULT FROM INVEST_RECORD IR JOIN INVESTMENT I ON(I.INVEST_ID = IR.INVEST_ID) JOIN PRODUCT P ON (P.P_ID = I.P_ID) WHERE IR.INVEST_ID IN( SELECT INVEST_ID FROM INVESTMENT I WHERE I.P_ID IN (SELECT P_ID  FROM PRODUCT P WHERE USER_ID=?))GROUP BY IR.INVEST_ID, P.P_ID)) AS FINALRESULT FROM MEMBER M JOIN PRODUCT P ON(P.USER_ID = M.USER_ID) WHERE M.USER_ID=?)




listSalesMonthCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(PAY_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END) PAYMENT_COMPLETE_PRICE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END) NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(PAY_DATE,'YYYY-MM') ORDER BY 1 DESC)
listSalesYearCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(PAY_DATE,'YYYY') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END) PAYMENT_COMPLETE_PRICE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END) NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(PAY_DATE,'YYYY') ORDER BY 1 DESC)
selectAllSalesMonth=SELECT RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT ROWNUM AS RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT TO_CHAR(PAY_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END)/10000),'999,999,999') PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0))/10000,'999,999,999') PAYMENT_COMPLETE_PRICE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0))/10000,'999,999,999') NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(PAY_DATE,'YYYY-MM') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectAllSalesYear=SELECT RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT ROWNUM AS RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT TO_CHAR(PAY_DATE,'YYYY') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END)/10000),'999,999,999') PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0))/10000,'999,999,999') PAYMENT_COMPLETE_PRICE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0))/10000,'999,999,999') NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(PAY_DATE,'YYYY') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
listSalesTypeMonthCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(PAY_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0) PAYMENT_COMPLETE_PRICE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0) NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) WHERE P_CODE=? GROUP BY TO_CHAR(PAY_DATE,'YYYY-MM') ORDER BY 1 DESC)
listSalesTypeYearCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(PAY_DATE,'YYYY') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0) PAYMENT_COMPLETE_PRICE, SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0) NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) WHERE P_CODE=? GROUP BY TO_CHAR(PAY_DATE,'YYYY') ORDER BY 1 DESC)
selectSalesTypeMonth=SELECT RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT ROWNUM AS RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT TO_CHAR(PAY_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END)/10000),'999,999,999') PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0))/10000,'999,999,999') PAYMENT_COMPLETE_PRICE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0))/10000,'999,999,999') NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) WHERE P_CODE=? GROUP BY TO_CHAR(PAY_DATE,'YYYY-MM') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectSalesTypeYear=SELECT RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT ROWNUM AS RNUM, TERM, PAYMENT_COUNT, PAYMENT_PRICE, REFUND_COUNT, PAYMENT_PERCENTAGE, PAYMENT_COMPLETE_PRICE, NET_SALES FROM(SELECT TO_CHAR(PAY_DATE,'YYYY') TERM, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) PAYMENT_COUNT, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END)/10000),'999,999,999') PAYMENT_PRICE, COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END) REFUND_COUNT, ROUND(NVL((COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END) - COUNT(CASE WHEN PAY_CLASS='refund' THEN 1 END)) / DECODE(COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END), 0, NULL, COUNT(CASE WHEN PAY_CLASS='invest' THEN 1 END)), 0)*100) PAYMENT_PERCENTAGE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE END),0))/10000,'999,999,999') PAYMENT_COMPLETE_PRICE, TO_CHAR((SUM(CASE WHEN PAY_CLASS='invest' THEN PRICE*P_FEES END) - NVL(SUM(CASE WHEN PAY_CLASS='refund' THEN PRICE*P_FEES END),0))/10000,'999,999,999') NET_SALES FROM INVEST_RECORD JOIN INVESTMENT USING(INVEST_ID) JOIN PRODUCT USING(P_ID) JOIN PRODUCT_RECORD PR USING(P_ID) JOIN P_TYPE USING(P_CODE) WHERE P_CODE=? GROUP BY TO_CHAR(PAY_DATE,'YYYY') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?

listOpenFundingMonthCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='enroll' THEN 1 END) ENROLL_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) OPEN_COUNT, ROUND(NVL(COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) / DECODE(COUNT(CASE WHEN STATUS='enroll' THEN 1 END), 0, NULL, COUNT(CASE WHEN STATUS='enroll' THEN 1 END)), 0)*100) APPROVAL_RATE, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=1 THEN 1 END) TYPE1_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=2 THEN 1 END) TYPE2_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=3 THEN 1 END) TYPE3_OPEN_COUNT FROM PRODUCT_RECORD PR JOIN PRODUCT P USING(P_ID) JOIN P_TYPE PT USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM') ORDER BY 1 DESC)
listOpenFundingYearCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='enroll' THEN 1 END) ENROLL_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) OPEN_COUNT, ROUND(NVL(COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) / DECODE(COUNT(CASE WHEN STATUS='enroll' THEN 1 END), 0, NULL, COUNT(CASE WHEN STATUS='enroll' THEN 1 END)), 0)*100) APPROVAL_RATE, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=1 THEN 1 END) TYPE1_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=2 THEN 1 END) TYPE2_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=3 THEN 1 END) TYPE3_OPEN_COUNT FROM PRODUCT_RECORD PR JOIN PRODUCT P USING(P_ID) JOIN P_TYPE PT USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY') ORDER BY 1 DESC)
selectOpenFundingMonth=SELECT RNUM, TERM, ENROLL_COUNT, OPEN_COUNT, APPROVAL_RATE, TYPE1_OPEN_COUNT, TYPE2_OPEN_COUNT, TYPE3_OPEN_COUNT FROM(SELECT ROWNUM AS RNUM, TERM, ENROLL_COUNT, OPEN_COUNT, APPROVAL_RATE, TYPE1_OPEN_COUNT, TYPE2_OPEN_COUNT, TYPE3_OPEN_COUNT FROM(SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='enroll' THEN 1 END) ENROLL_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) OPEN_COUNT, ROUND(NVL(COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) / DECODE(COUNT(CASE WHEN STATUS='enroll' THEN 1 END), 0, NULL, COUNT(CASE WHEN STATUS='enroll' THEN 1 END)), 0)*100) APPROVAL_RATE, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=1 THEN 1 END) TYPE1_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=2 THEN 1 END) TYPE2_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=3 THEN 1 END) TYPE3_OPEN_COUNT FROM PRODUCT_RECORD PR JOIN PRODUCT P USING(P_ID) JOIN P_TYPE PT USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectOpenFundingYear=SELECT RNUM, TERM, ENROLL_COUNT, OPEN_COUNT, APPROVAL_RATE, TYPE1_OPEN_COUNT, TYPE2_OPEN_COUNT, TYPE3_OPEN_COUNT FROM(SELECT ROWNUM AS RNUM, TERM, ENROLL_COUNT, OPEN_COUNT, APPROVAL_RATE, TYPE1_OPEN_COUNT, TYPE2_OPEN_COUNT, TYPE3_OPEN_COUNT FROM(SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='enroll' THEN 1 END) ENROLL_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) OPEN_COUNT, ROUND(NVL(COUNT(CASE WHEN STATUS='enrollApproval' THEN 1 END) / DECODE(COUNT(CASE WHEN STATUS='enroll' THEN 1 END), 0, NULL, COUNT(CASE WHEN STATUS='enroll' THEN 1 END)), 0)*100) APPROVAL_RATE, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=1 THEN 1 END) TYPE1_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=2 THEN 1 END) TYPE2_OPEN_COUNT, COUNT(CASE WHEN STATUS='enrollApproval' AND P_CODE=3 THEN 1 END) TYPE3_OPEN_COUNT FROM PRODUCT_RECORD PR JOIN PRODUCT P USING(P_ID) JOIN P_TYPE PT USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?

listSuccessFundingMonthCount=SELECT COUNT(*) FROM(SELECT TERM, END_COUNT, SUCCESS_COUNT, ROUND(NVL(SUCCESS_COUNT / DECODE(END_COUNT, 0, NULL,END_COUNT), 0)*100) SUCCESS_RATE, ROUND(NVL(TYPE1_SUCCESS_COUNT / DECODE(TYPE1_END_COUNT, 0, NULL,TYPE1_END_COUNT), 0)*100) TYPE1_SUCCESS_RATE, ROUND(NVL(TYPE2_SUCCESS_COUNT / DECODE(TYPE2_END_COUNT, 0, NULL,TYPE2_END_COUNT), 0)*100) TYPE2_SUCCESS_RATE, ROUND(NVL(TYPE3_SUCCESS_COUNT / DECODE(TYPE3_END_COUNT, 0, NULL,TYPE3_END_COUNT), 0)*100) TYPE3_SUCCESS_RATE FROM (SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='endApproval' THEN 1 END) SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=1 THEN 1 END) TYPE1_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=2 THEN 1 END) TYPE2_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=3 THEN 1 END) TYPE3_SUCCESS_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM')) JOIN (SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='end' THEN 1 END) END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=1 THEN 1 END) TYPE1_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=2 THEN 1 END) TYPE2_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=3 THEN 1 END) TYPE3_END_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM')) USING(TERM) ORDER BY 1 DESC)
listSuccessFundingYearCount=SELECT COUNT(*) FROM(SELECT TERM, END_COUNT, SUCCESS_COUNT, ROUND(NVL(SUCCESS_COUNT / DECODE(END_COUNT, 0, NULL,END_COUNT), 0)*100) SUCCESS_RATE, ROUND(NVL(TYPE1_SUCCESS_COUNT / DECODE(TYPE1_END_COUNT, 0, NULL,TYPE1_END_COUNT), 0)*100) TYPE1_SUCCESS_RATE, ROUND(NVL(TYPE2_SUCCESS_COUNT / DECODE(TYPE2_END_COUNT, 0, NULL,TYPE2_END_COUNT), 0)*100) TYPE2_SUCCESS_RATE, ROUND(NVL(TYPE3_SUCCESS_COUNT / DECODE(TYPE3_END_COUNT, 0, NULL,TYPE3_END_COUNT), 0)*100) TYPE3_SUCCESS_RATE FROM (SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='endApproval' THEN 1 END) SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=1 THEN 1 END) TYPE1_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=2 THEN 1 END) TYPE2_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=3 THEN 1 END) TYPE3_SUCCESS_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY')) JOIN (SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='end' THEN 1 END) END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=1 THEN 1 END) TYPE1_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=2 THEN 1 END) TYPE2_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=3 THEN 1 END) TYPE3_END_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY')) USING(TERM) ORDER BY 1 DESC)
selectSuccessFundingMonth=SELECT RNUM, TERM, END_COUNT, SUCCESS_COUNT, SUCCESS_RATE, TYPE1_SUCCESS_RATE, TYPE2_SUCCESS_RATE, TYPE3_SUCCESS_RATE FROM(SELECT ROWNUM AS RNUM, TERM, END_COUNT, SUCCESS_COUNT, SUCCESS_RATE, TYPE1_SUCCESS_RATE, TYPE2_SUCCESS_RATE, TYPE3_SUCCESS_RATE FROM(SELECT TERM, END_COUNT, SUCCESS_COUNT, ROUND(NVL(SUCCESS_COUNT / DECODE(END_COUNT, 0, NULL,END_COUNT), 0)*100) SUCCESS_RATE, ROUND(NVL(TYPE1_SUCCESS_COUNT / DECODE(TYPE1_END_COUNT, 0, NULL,TYPE1_END_COUNT), 0)*100) TYPE1_SUCCESS_RATE, ROUND(NVL(TYPE2_SUCCESS_COUNT / DECODE(TYPE2_END_COUNT, 0, NULL,TYPE2_END_COUNT), 0)*100) TYPE2_SUCCESS_RATE, ROUND(NVL(TYPE3_SUCCESS_COUNT / DECODE(TYPE3_END_COUNT, 0, NULL,TYPE3_END_COUNT), 0)*100) TYPE3_SUCCESS_RATE FROM (SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='endApproval' THEN 1 END) SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=1 THEN 1 END) TYPE1_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=2 THEN 1 END) TYPE2_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=3 THEN 1 END) TYPE3_SUCCESS_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM')) JOIN (SELECT TO_CHAR(START_DATE,'YYYY-MM') TERM, COUNT(CASE WHEN STATUS='end' THEN 1 END) END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=1 THEN 1 END) TYPE1_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=2 THEN 1 END) TYPE2_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=3 THEN 1 END) TYPE3_END_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY-MM')) USING(TERM) ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectSuccessFundingYear=SELECT RNUM, TERM, END_COUNT, SUCCESS_COUNT, SUCCESS_RATE, TYPE1_SUCCESS_RATE, TYPE2_SUCCESS_RATE, TYPE3_SUCCESS_RATE FROM(SELECT ROWNUM AS RNUM, TERM, END_COUNT, SUCCESS_COUNT, SUCCESS_RATE, TYPE1_SUCCESS_RATE, TYPE2_SUCCESS_RATE, TYPE3_SUCCESS_RATE FROM(SELECT TERM, END_COUNT, SUCCESS_COUNT, ROUND(NVL(SUCCESS_COUNT / DECODE(END_COUNT, 0, NULL,END_COUNT), 0)*100) SUCCESS_RATE, ROUND(NVL(TYPE1_SUCCESS_COUNT / DECODE(TYPE1_END_COUNT, 0, NULL,TYPE1_END_COUNT), 0)*100) TYPE1_SUCCESS_RATE, ROUND(NVL(TYPE2_SUCCESS_COUNT / DECODE(TYPE2_END_COUNT, 0, NULL,TYPE2_END_COUNT), 0)*100) TYPE2_SUCCESS_RATE, ROUND(NVL(TYPE3_SUCCESS_COUNT / DECODE(TYPE3_END_COUNT, 0, NULL,TYPE3_END_COUNT), 0)*100) TYPE3_SUCCESS_RATE FROM (SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='endApproval' THEN 1 END) SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=1 THEN 1 END) TYPE1_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=2 THEN 1 END) TYPE2_SUCCESS_COUNT, COUNT(CASE WHEN STATUS='endApproval' AND P_CODE=3 THEN 1 END) TYPE3_SUCCESS_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY')) JOIN (SELECT TO_CHAR(START_DATE,'YYYY') TERM, COUNT(CASE WHEN STATUS='end' THEN 1 END) END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=1 THEN 1 END) TYPE1_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=2 THEN 1 END) TYPE2_END_COUNT, COUNT(CASE WHEN STATUS='end' AND P_CODE=3 THEN 1 END) TYPE3_END_COUNT FROM PRODUCT_RECORD JOIN PRODUCT USING(P_ID) JOIN P_TYPE USING(P_CODE) GROUP BY TO_CHAR(START_DATE,'YYYY')) USING(TERM) ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?

listMemberDateCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY-MM-DD') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY-MM-DD') ORDER BY 1 DESC)
listMemberMonthCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY-MM') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY-MM') ORDER BY 1 DESC)
listMemberYearCount=SELECT COUNT(*) FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY') ORDER BY 1 DESC)
selectMemberDate=SELECT RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT ROWNUM AS RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY-MM-DD') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY-MM-DD') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectMemberMonth=SELECT RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT ROWNUM AS RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY-MM') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY-MM') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?
selectMemberYear=SELECT RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT ROWNUM AS RNUM, TERM, MEMBER_COUNT, EMAIL_MEMBER_COUNT, KAKAO_MEMBER_COUNT, NAVER_MEMBER_COUNT FROM(SELECT TO_CHAR(ENROLL_DATE,'YYYY') TERM, COUNT(*) MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='email' THEN 1 END) EMAIL_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='kakao' THEN 1 END) KAKAO_MEMBER_COUNT, COUNT(CASE WHEN PLATFORM_TYPE='naver' THEN 1 END) NAVER_MEMBER_COUNT FROM MEMBER GROUP BY TO_CHAR(ENROLL_DATE,'YYYY') ORDER BY 1 DESC)) WHERE RNUM BETWEEN ? AND ?

